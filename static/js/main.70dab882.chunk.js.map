{"version":3,"sources":["images/Logo_wide.png","images/Logo.png","pages/Menu.js","pages/Game.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","className","to","src","logo","alt","width","Game","useState","_id","nivel","energia","rodada","setRodada","isEscolha","setIsEscolha","nivelMovel","setNivelMovel","nivelConquista","setNivelConquista","energiaMovel","setEnergiaMovel","energiaConquista","setEnergiaConquista","fortaleza","setFortaleza","newRodada","upNivel","upEnergia","nivelNew","energiaNew","useEffect","atual","onClick","console","log","Routes","path","exact","component","App","logo_wide","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.70dab882.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo_wide.eda6be1a.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo.31fb0142.png\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../global.css';\r\nimport '../App.css';\r\nimport logo from '../images/Logo.png';\r\n\r\n\r\nfunction Menu() {\r\n  return(\r\n    <div className=\"App\" >\r\n      <main>\r\n        <Link to=\"/sevengalaxies-app/Game\"> \r\n          <img src={logo} alt=\"Seven Galaxies\" width=\"80%\"/>\r\n        </Link>      \r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu;","import React, { useState, useEffect} from 'react';\r\nimport '../global.css';\r\nimport '../App.css';\r\n\r\n\r\nfunction Game() {\r\n  const [rodada, setRodada] = useState({ _id: 1, nivel: 1, energia: 1 });\r\n  //const [log,setLog] = useState([rodada]);\r\n  const [isEscolha, setIsEscolha] = useState(false); \r\n  const [nivelMovel, setNivelMovel] = useState(0);\r\n  const [nivelConquista, setNivelConquista] = useState(1);\r\n\r\n  const [energiaMovel, setEnergiaMovel] = useState(0);\r\n  const [energiaConquista, setEnergiaConquista] = useState(1);\r\n\r\n  const [fortaleza, setFortaleza] = useState(30);\r\n\r\n  useEffect(() => { \r\n    setNivelMovel(atual => atual + 1);\r\n  },[nivelConquista]);\r\n\r\n  useEffect(() => { \r\n    setEnergiaMovel( atual => atual + 1);\r\n  },[energiaConquista]);\r\n  \r\n  function newRodada(upNivel, upEnergia) {\r\n    let nivelNew    = nivelConquista;\r\n    let energiaNew  = energiaConquista;\r\n\r\n    if (upNivel) {\r\n      nivelNew++;\r\n      setNivelMovel(nivelConquista);\r\n      setNivelConquista(nivelNew);\r\n    } \r\n    if (upEnergia){\r\n      energiaNew++;\r\n      setEnergiaMovel( energiaConquista);\r\n      setEnergiaConquista(energiaNew);\r\n    }\r\n\r\n    setRodada({\r\n      _id:      rodada._id + 1,\r\n      nivel:    nivelNew,\r\n      energia:  energiaNew});\r\n\r\n    setIsEscolha(false);\r\n  }\r\n  \r\n  function RodadaControl() {\r\n    console.log(\"RodadaControl \" + rodada._id);\r\n\r\n    if (rodada._id + 1  <= 2){\r\n      /*setRodada({\r\n          _id:      rodada._id + 1,\r\n          nivel:    rodada.nivel ,\r\n          energia:  rodada.energia});*/\r\n\r\n      newRodada(true,true);\r\n    }\r\n    else {\r\n      setIsEscolha(true);\r\n    }\r\n\r\n    console.log(\"RodadaControlss \" + isEscolha);\r\n\r\n  } \r\n  \r\n  //seEffect(() => {    \r\n  //console.log(\"useEffect \" + isEscolha);\r\n    //console.log(\"rodada \" + rodada._id);\r\n    //console.log(\"escolha \" + isEscolha);  \r\n    /*setRodada({\r\n      _id:      rodada._id,\r\n      nivel:    nivelConquista,\r\n      energia:  energiaConquista});*/\r\n    \r\n  //},[/*rodada._id,nivelConquista,energiaConquista*/]);\r\n\r\n  \r\n  \r\n\r\n  return (\r\n\r\n\r\n    <main className=\"list-Reserva\">\r\n      <div className=\"Rodada\">\r\n        {isEscolha \r\n          ? <div className=\"Rodada-escolha\" >\r\n              <button onClick={() => newRodada(true,false)}> + Nivel </button> \r\n              <button onClick={() => newRodada(false,true)}> + Energia </button> \r\n            </div>\r\n          : <button onClick={RodadaControl}> Nova Rodada </button>\r\n        }\r\n         <div className=\"Rodada-count\" >\r\n          <p> {rodada._id} </p> \r\n          </div> \r\n      </div>\r\n\r\n      <div className=\"Reserva\" >\r\n        <header>\r\n          <strong> NÃ­vel (N) </strong>\r\n        </header>\r\n        <div className=\"Reserva-movel\">\r\n          <button onClick={() => setNivelMovel(nivelMovel - 1)} > - </button>\r\n          <p> {nivelMovel} </p>\r\n          <button onClick={() => setNivelMovel(nivelMovel + 1)}> + </button>\r\n        </div>\r\n        <div className=\"Reserva-conquista\">\r\n          <button onClick={() => setNivelConquista(nivelConquista - 1)} > - </button>\r\n          <p> {nivelConquista} </p>\r\n          <button onClick={() => setNivelConquista(nivelConquista + 1)}> + </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"Reserva\" >\r\n        <header>\r\n          <strong> Energia (E) </strong>\r\n        </header>\r\n        <div className=\"Reserva-movel\">\r\n          <button onClick={() => setEnergiaMovel(energiaMovel - 1)} > - </button>\r\n          <p> {energiaMovel} </p>\r\n          <button onClick={() => setEnergiaMovel(energiaMovel + 1)}> + </button>\r\n        </div>\r\n        <div className=\"Reserva-conquista\">\r\n          <button onClick={() => setEnergiaConquista(energiaConquista - 1)} > - </button>\r\n          <p> {energiaConquista} </p>\r\n          <button onClick={() => setEnergiaConquista(energiaConquista + 1)}> + </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"Reserva\" >\r\n        <header>\r\n          <strong> Fortaleza </strong>\r\n        </header>\r\n        <div className=\"Reserva-movel\">\r\n          <button onClick={() => setFortaleza(fortaleza + 1)} > + </button>\r\n          <p> {fortaleza} </p>\r\n          <button onClick={() => setFortaleza(fortaleza - 1)}> - </button>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </main>\r\n\r\n  )\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport {BrowserRouter,Route, Switch} from \"react-router-dom\";\r\n\r\nimport Menu from './pages/Menu';\r\nimport Game from './pages/Game';\r\n\r\nexport default function Routes(){\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/sevengalaxies-app/\" exact component={Menu}/>\r\n        <Route path=\"/sevengalaxies-app/Game\" component={Game}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n\r\n  )\r\n\r\n}\r\n","import React from 'react';\nimport './global.css';\nimport './App.css';\nimport logo_wide from './images/Logo_wide.png';\n\n\nimport Routes from './routes';\n\nfunction App() {\n  \n\n  /*function incrementNivel(count) {\n    setNivelMov(nivelMov + count);\n  }*/\n\n  return (\n\n    <div className=\"App\" >\n      <header className=\"App-header\">\n        <img src={logo_wide} alt=\"Seven Galaxies\"/>\n      </header>\n      \n      \n      <Routes/>\n    </div>    \n      \n   \n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(< App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}